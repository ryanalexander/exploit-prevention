import {MessageEmbed, EmbedField, Message, TextChannel} from "discord.js";

export type Menu = {

    screens: Screen[]
}
export type Screen = {
    title: string,
    body?: string,
    fields?: EmbedField[];
    options?: Option[]
}
export type Option = {
    human_name: string,
    enum_name?: string,
    colour?: string,
    action: ()=>void;
}

export const ProgressiveMenu = class {
    set screenIndex(value: number) {
        this._screenIndex = value;
    }
    get screenIndex(): number {
        return this._screenIndex;
    }

    menu: Menu;
    screen: Screen;

    private _screenIndex: number = 0;

    message: Message | undefined;

    constructor(menu: Menu) {
        this.menu = menu;
        this.screen = menu.screens[0];
    }

    async sendTo(channel: TextChannel) {
        this.message = await channel.send(this.buildDiscordEmbed());
        return this.message;
    }
    setActiveScreen(screen: Screen | number) {
        if(typeof screen === "number") {
            this.screen = this.menu.screens[screen];
            this.screenIndex = screen;
        }else {
            this.screen = screen;
        }
        if(this.message)
            this.message.edit(this.buildDiscordEmbed());
    }

    linkMessage(message: Message) {
        this.message = message;
    }

    buildDiscordEmbed() {
        return new MessageEmbed().setTitle(this.screen.title).setDescription(this.screen.body);
    }

    /**
     * TODO Submit into MenuManager
     */
    register() {

    }
}