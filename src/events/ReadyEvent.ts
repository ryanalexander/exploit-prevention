import {Event, Managers} from '../lib/libaries';
import {Guild} from "discord.js";
import fetch from "node-fetch";

module.exports = class extends Event {
    constructor() {
        super({
            event: "ready",
        });
        this._execute = this.execute;
    }

    execute() {
        [
            `\u001b[38;5;10mSuccessfully started ${Managers.DiscordClient.user.tag} \u001b[0m`
        ].forEach(line => {
            console.log(line);
        });

        Managers.DiscordClient.guilds.cache.forEach((guild:Guild) => {
            Managers.GuildManager.getGuildModules(guild).then(((modules:any) => {
                if(modules.find((module:any) => module.module_name === "invitetrack").enabled)
                    Managers.GuildManager.syncInvites(guild);
            }));
        })


        if(!Managers.Config.isDev) {
            var informStatus = async ()=>{
                (await fetch('https://heartbeat.uptimerobot.com/m788307139-9772d3c7940851bcd1a9ded47f18b37fa8b69aeb'));
                let botsggParams = new URLSearchParams();
                let dblParams = new URLSearchParams();
                botsggParams.append("guildCount", Managers.DiscordClient.guilds.cache.size+"");
                dblParams.append("guilds", Managers.DiscordClient.guilds.cache.size+"");
                dblParams.append("users", Managers.DiscordClient.users.cache.size+"");
                // @ts-ignore
                await fetch('https://discord.bots.gg/api/v1/bots/844868880152526868/stats', {method: 'POST', body: botsggParams, headers: {"Authorization": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhcGkiOnRydWUsImlkIjoiMzE3MjM2MzIxMDk5NzEwNDY3IiwiaWF0IjoxNjIzODUyMDUyfQ.wLZNF7MsAm3AHMTE9aoi7chFvPRl_oA4pSVCX2ntT8I"}});
                await fetch('https://discordbotlist.com/api/v1/bots/exploit-prevention/stats', {method: 'POST', body: dblParams, headers: {"Authorization": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0IjoxLCJpZCI6IjgyMTcwMTgyMzYxNzgyNjg1NiIsImlhdCI6MTYyMzg1Mjc3OH0.A3Wx_Y6ouW0rKLHgg7-KUaKoAglURMYFZQGPOmUzSzk"}});
            }
            informStatus();
            setInterval(informStatus, 60 * 1000);
        }
    }

}