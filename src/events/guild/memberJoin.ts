import { Event, Managers } from "../../lib/libaries";
import { GuildMember } from "discord.js";
import { SyrusGuild } from "../../managers/GuildManager";

module.exports = class extends Event {
  constructor() {
    super({
      event: "guildMemberAdd",
    });
    this._execute = this.execute;
  }

  async execute(member: GuildMember) {
    let guild: SyrusGuild = await Managers.GuildManager.getGuildOrCreate(
      member.guild
    );
    Managers.SQL.registerUser(member.user, member.guild);

    Managers.ModuleManager.filterModulesByEvent(
      guild.modules,
      "guildMemberAdd"
    ).forEach(
      (module: {
        onMemberJoin: (member: GuildMember, guild: SyrusGuild) => void;
      }) => module.onMemberJoin(member, guild)
    );
  }
};
