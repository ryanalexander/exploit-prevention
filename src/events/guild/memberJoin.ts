import {Event, Managers} from '../../lib/libaries';
import {GuildMember} from "discord.js";
import {lang} from "../../lib/LanguageLib";

module.exports = class extends Event {
    constructor() {
        super({
            event: "guildMemberAdd",
        });
        this._execute = this.execute;
    }

    async execute(member: GuildMember) {
        let guild = await Managers.GuildManager.getGuildOrCreate(member.guild);
        Managers.SQL.registerUser(member.user, member.guild);
        if(guild.modules.indexOf("invitetrack") <= -1)return;
        try {
            let guildInvites = await member.guild.fetchInvites();
            let ei = await Managers.SQL.getInvitesForGuild(member.guild)

            // @ts-ignore
            const invite = (guildInvites.find(i => ei.find(foo => foo.id === i.code)!==undefined&&(ei.find(foo => foo.id === i.code).uses < i.uses)));

            await Managers.SQL.registerGuildUser(member, invite);
        }catch (e) {
            if(e.httpStatus && e.httpStatus === 403) {
                // Missing permissions
                Managers.GuildManager.sendInform(member.guild, lang.messages.errors.module_disabled_noperm, [
                    {
                        type: "MODULE_NAME",
                        value: "invitetrack"
                    },
                    {
                        type: "DISCORD_PERM_NODE",
                        value: "MANAGE_GUILD"
                    }
                ]);
                await Managers.GuildManager.disableModule(member.guild, "invitetrack");
            }else {
                console.log(e);
            }
        }
    }

}