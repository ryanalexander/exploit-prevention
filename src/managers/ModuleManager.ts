import { Utils } from "../lib/libaries";

module.exports = class {
  private _modules: any[] = [];
  private _moduleDir: string = "";

  constructor(moduleDir: string) {
    this._moduleDir = moduleDir;
    this._modules = [];

    Utils.files.getFiles(this._moduleDir).forEach((file: any) => {
      if (file.path.endsWith(".map")) return;
      this.loadModule(file.path);
    });
  }

  getModulesByEvent(event: string) {
    return this._modules.filter(
      (mod: any) => mod.SUBSCRIBE.indexOf(event) > -1
    );
  }
  filterModulesByEvent(modules: string[], event: string) {
    return this._modules.filter(
      (mod: any) =>
        modules.indexOf(mod._name) > -1 && mod.SUBSCRIBE.indexOf(event) > -1
    );
  }

  get moduleDir(): string {
    return this._moduleDir;
  }

  private loadModule(module: string): void {
    let e = new (require("../" + module))();
    this._modules.push(e);
    console.log(
      `Module> Loaded module ${e._name} with ${e.SUBSCRIBE.length} hooks - ${module}`
    );
  }
};
