import {Command, Managers} from '../../lib/libaries';
import {GuildMember, Message} from 'discord.js';
import {getGuildMessage, lang} from "../../lib/LanguageLib";

module.exports = class extends Command {
    constructor() {
        super({
            name: "whois",
            aliases: ["whois"],
            description: "View information on user",
            category: "admin",
            requiredPerms: ["MANAGE_MEMBERS"]
        });
        this._execute = this.execute;
    }

    async execute(_member: GuildMember, _content: string, _message: Message) {
        let target = _message.mentions.members?.first() || _member;
        let isTracking = this.guild.modules.indexOf("invitetrack")>-1
        let user = await Managers.SQL.getGuildUser(_member.guild, target.user);
        await _message.channel.send(getGuildMessage(lang.messages.whois, this.guild, [
            {
                type: "DISCORD_TARGET_TAG",
                value: `${target.user.tag}`
            },
            {
                type: "DISCORD_TARGET_MENTION",
                value: `${target.user.toString()}`
            },
            {
                type: "USER_FIRST_SEEN",
                value: isTracking?user?msToReadableTime((new Date().getTime() - new Date(user.first_seen).getTime())):"Not tracked":"Tracking disabled"
            },
            {
                type: "USER_INVITEE",
                value: isTracking?user?`<@${user.invitee}> (${user.invite})`:"Not tracked":"Tracking disabled"
            }
        ]));

        function msToReadableTime(t: any){
            const time = Number(t);
            const second = 1000;
            const minute = second * 60;
            const hour = minute * 60;
            const day = hour * 24;
            const month = day * 28;
            const year = month * 12;

            let years = Math.floor(time / year);
            let months = Math.floor(time / month % 12);
            let days = Math.floor(time / day % 28);
            let hours = Math.floor(time / hour % 24);
            let minutes = Math.floor(time / minute % 60);
            let seconds = Math.floor(time / second % 60);


            return (years>0?years + 'y ':"") + (months>0?months + 'mo ':"") + (days>0?days + 'd ':"") + (hours>0?hours + 'h ':"") + (minutes>0?minutes + "m ":"") + seconds + "s" + " ago";
        }
    };
}